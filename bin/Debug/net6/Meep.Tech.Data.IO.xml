<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Meep.Tech.Data.IO</name>
    </assembly>
    <members>
        <member name="T:Meep.Tech.Data.IO.Configuration.ModelPortingSaveJsonContract">
            <summary>
            A special contract resolver used for the model serialization and deserialization
            </summary>
        </member>
        <member name="M:Meep.Tech.Data.IO.Configuration.ModelPortingSaveJsonContract.#ctor(Meep.Tech.Data.Universe)">
            <summary>
            A special contract resolver used for the model serialization and deserialization
            </summary>
        </member>
        <member name="M:Meep.Tech.Data.IO.Configuration.ModelPortingSaveJsonContract.CreateProperties(System.Type,Newtonsoft.Json.MemberSerialization)">
            <summary><inheritdoc/></summary>
        </member>
        <member name="T:Meep.Tech.Data.IO.Configuration.ModelIOContext">
            <summary>
            A context importing and exporting model save data.
            </summary>
        </member>
        <member name="P:Meep.Tech.Data.IO.Configuration.ModelIOContext.SaveDataSerializer">
            <summary>
            Save data json serializer.
            </summary>
        </member>
        <member name="P:Meep.Tech.Data.IO.Configuration.ModelIOContext.SaveDataSerializerSettings">
            <summary>
            Settings for save data json serialization
            </summary>
        </member>
        <member name="M:Meep.Tech.Data.IO.Configuration.ModelIOContext.#ctor">
            <summary>
            Make a new model import context
            </summary>
        </member>
        <member name="M:Meep.Tech.Data.IO.Configuration.ModelIOContext.TryToFetchModelByTypeAndId(System.Type,System.String,Meep.Tech.Data.IUnique@,System.Exception@)">
            <summary>
            Overrideable logic to fetch a model from cache or other stored location by it's ID.
            </summary>
        </member>
        <member name="M:Meep.Tech.Data.IO.Configuration.ModelIOContext._tryToFetchModelByTypeAndId(System.Type,System.String,Meep.Tech.Data.IUnique@,System.Exception@)">
            <summary>
            Overrideable logic to fetch a model from cache or other stored location by it's ID.
            </summary>
        </member>
        <member name="P:Meep.Tech.Data.IO.Configuration.ModelIOContext.OnLoaderInitializationComplete">
            <summary>
            Update the copy settings to use the internal serializer
            </summary>
        </member>
        <member name="P:Meep.Tech.Data.IO.Configuration.ModelIOContext.OnLoaderAutoBuildPropertyCreationStart">
            <summary>
            Adds auto porting steps for auto building.
            </summary>
        </member>
        <member name="T:Meep.Tech.Data.IO.AutoPortAttribute">
            <summary>
            Indicates that when this field is serialized or deserialized it should try to load the models as a collection; first via the cache, then via porting if a string id was provided instead of a json object.
            This also applies Caching to auto-building.
            </summary>
        </member>
        <member name="P:Meep.Tech.Data.IO.AutoPortAttribute.PreserveKeys">
            <summary>
            If true, and the value is a dictionary[string,Iunique]; 
            this will save the value as an object, and set the keys for each id in the collection to whatever they are in the existing dictionary.
            <para>
            By default, this is false, and dictionaries will serialize to a collection of ids, and deserialize to a collection of IUnique models indexed by their id.
            </para>
            </summary>
        </member>
        <member name="P:Meep.Tech.Data.IO.AutoPortAttribute.IgnoreDuringAutoBuilding">
            <summary>
            If this is true, this will not try to auto port when auto-building.
            This is false by default.
            </summary>
        </member>
        <member name="T:Meep.Tech.Data.IO.NotSaveDataAttribute">
            <summary>
            Indicates this field is NOT save data, and even if it's labeled as json include or column, it should be ignored in server side serialization data
            </summary>
        </member>
        <member name="T:Meep.Tech.Data.IO.SaveDataAttribute">
            <summary>
            Indicates this field is save data, and even if it's labeled as json ignore, it should be included in server side serialization data
            </summary>
        </member>
        <member name="T:Meep.Tech.Data.IO.SaveDataAttribute.Getter">
            <summary>
            A property value getter
            </summary>
        </member>
        <member name="T:Meep.Tech.Data.IO.SaveDataAttribute.Setter">
            <summary>
            A property value setter
            </summary>
        </member>
        <member name="P:Meep.Tech.Data.IO.SaveDataAttribute.PropertyNameOverride">
            <summary>
            Override for the json property name
            </summary>
        </member>
        <member name="M:Meep.Tech.Data.IO.SaveDataAttribute.GetGetterOverride(System.Reflection.PropertyInfo,Meep.Tech.Data.Universe)">
            <summary>
            Get the override for the getter.
            </summary>
        </member>
        <member name="M:Meep.Tech.Data.IO.SaveDataAttribute.GetSetterOverride(System.Reflection.PropertyInfo,Meep.Tech.Data.Universe)">
            <summary>
            Get the override for the setter
            </summary>
        </member>
        <member name="M:Meep.Tech.Data.IO.SaveDataAttribute.DeserializerFromRawOverride(Meep.Tech.Data.Universe)">
            <summary>
            Used to deserialize the data from raw data
            </summary>
        </member>
        <member name="M:Meep.Tech.Data.IO.SaveDataAttribute.SerializerToRawOverride(Meep.Tech.Data.Universe)">
            <summary>
            Used to serialize the data into raw data
            </summary>
        </member>
    </members>
</doc>
